model Account {
    userId            String  @map("user_id")
    type              String
    provider          String
    providerAccountId String  @map("provider_account_id")
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
    @@map("accounts")
}

// ! We are not using sessions
// model Session {
//     sessionToken String   @unique @map("session_token")
//     userId       String   @map("user_id")
//     expires      DateTime
//     user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//     createdAt DateTime @default(now()) @map("created_at")
//     updatedAt DateTime @updatedAt @map("updated_at")

//     @@map("sessions")
// }

model VerificationToken {
    identifier String // Email of the user
    token      String   @unique
    expires    DateTime

    @@id([identifier, token])
    @@map("verification_tokens")
}

model PasswordResetToken {
    identifier String // Email of the user
    token      String   @unique
    expires    DateTime

    @@id([identifier, token])
    @@map("password_reset_tokens")
}
